#!/usr/bin/env bash

# Source config to access the variables
source /home/pi/OC-DigitalSignage/config.sh

if [ "$EUID" -ne 0 ]
  then echo "Please run install with sudo!  sudo ./install"
  exit
fi

# Go to root directory
echo "Changing to root directory"
cd /

# Create tar of home directory to restore during uninstall
if [ ! -e "/home/pi/OC-DigitalSignage/home.tar" ]; then
    echo "Storing home directory..."
    tar -cf /home/pi/OC-DigitalSignage/home.tar /home/pi
else
    echo "home.tar already exists"
fi

# Ask user to set PI_UID
echo -n "Do you wish to set the PI_UID now? (Y/n) "
read yn; echo
case $yn in
    [Yy]* ) nano /home/pi/OC-DigitalSignage/config.sh;;
    [Nn]* ) echo "You can always edit the config.sh anytime";;
    * ) nano /home/pi/OC-DigitalSignage/config.sh;;
esac

# Configure cron for boot to run as pi
# Change to pi user for the following EOF
echo "Installing crontab..."
sudo -i -u pi bash << EOF
# write new mycron --
# Fetch on boot timestamp to last_cron
echo "@reboot sleep 15;/home/pi/OC-DigitalSignage/fetch >> /home/pi/OC-DigitalSignage/fetch.log && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/OC-DigitalSignage/last_cron" > mycron

# Every 6hrs fetch and timestamp to last_cron
echo "* */6 * * * /usr/bin/python3 /home/pi/OC-DigitalSignage/cronner && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/OC-DigitalSignage/last_cron" >> mycron

# Every 15min push heartbeat and timestamp to last_cron
echo "*/15 * * * * /home/pi/OC-DigitalSignage/push && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/OC-DigitalSignage/last_cron" >> mycron

# Every morning at 4am reboot
echo "59 3 * * * sudo /sbin/shutdown -r now" >> mycron

# install new cron file
crontab mycron
rm mycron
EOF

# turn off screen blanking and cursor
if [ ! -e "/etc/lightdm/original-lightdm.conf" ]; then
    echo "Installing custom lightdm.conf..."
    mv /etc/lightdm/lightdm.conf /etc/lightdm/original_lightdm.conf

    touch /etc/lightdm/lightdm.conf

    # EOL indentation is sensitive, so leave it be
    cat > /etc/lightdm/lightdm.conf << EOL
# OC-DigitalSignage version of lightdm.conf
# Original config stored in /etc/lightdm/original_lightdm.conf

[Seat:*]
# Defaults
greeter-session=pi-greeter
greeter-hide-users=false
display-setup-script=/usr/share/dispsetup.sh
autologin-user=pi

# Turns off screen blanking and cursor
xserver-command=X -nocursor -s 0 dpms
EOL
else
    echo "Custom lightdm.conf already installed"
fi

cd $PROJECTPATH

# Install python dependencies
# Required to run as pi, will fail miserably otherwise
if [ ! -e "/home/pi/OC-DigitalSignage/venv" ]; then
    echo "Installing python dependencies..."
    sudo -i -u pi bash << EOF
    # cd to project
    cd /home/pi/OC-DigitalSignage

    # Create venv and activate it
    python3 -m venv venv
    source venv/bin/activate

    # Install all required modules
    python3 -m pip install -r requirements.txt

    # Makes the 'videos' directory
    # Throws an error if it is not there
    mkdir videos

    # Create fetch.log
    touch fetch.log
EOF
else
    echo "venv already installed"
    echo "Running pip again to make sure everything is installed..."
    sudo -i -u pi bash << EOF
    cd /home/pi/OC-DigitalSignage
    python3 -m pip install -r requirements.txt
EOF
fi

# Install the setup script in the home folder
if [ ! -e "/home/pi/setup" ]; then
    echo "Installing setup script..."
cat > /home/pi/setup << EOL
#!/usr/bin/env bash

if [ "$EUID" -ne 0 ]
    then printf "Please run setup with sudo!  sudo ./setup\n"
    exit
fi

echo -n "Enter WiFi name: "
read SSID; echo

echo -n "Enter WiFi password: "
read -s PASS; echo

printf "ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n" > /etc/wpa_supplicant/wpa_supplicant.conf
printf "update_config=1\n" >> /etc/wpa_supplicant/wpa_supplicant.conf
printf "country=\"US\"\n\n" >> /etc/wpa_supplicant/wpa_supplicant.conf
printf "network={\nssid=\"\${SSID}\"\npsk=\"\${PASS}\"\nkey_mgmt=WPA-PSK\n}\n" >> /etc/wpa_supplicant/wpa_supplicant.conf

exit 0;
EOL
else
    echo "Setup already installed"
fi

# Hide the top panel
if [ ! -e "/home/pi/.config/lxpanel/LXDE-pi/panels/panel" ]; then
    echo "Hiding top panel..."
    sudo -i -u pi bash << EOF
        touch /home/pi/.config/lxpanel/LXDE-pi/panels/panel
        printf "Global {\n    autohide=1\n    heightwhenhidden=0\n}\n" >> /home/pi/.config/lxpanel/LXDE-pi/panels/panel
EOF
else
    echo "lxpanel config already installed"
fi

# Use background.png as wallpaper and hide trash
if [ ! -e "/home/pi/.config/pcmanfm/LXDE-pi/desktop-items-0.conf" ]; then
    echo "Changing background..."
    sudo -i -u pi bash << EOF
        mkdir /home/pi/.config/{pcmanfm/LXDE-pi}
        touch /home/pi/.config/pcmanfm/LXDE-pi/desktop-items-0.conf
        printf "[*]\nwallpaper=/home/pi/OC-DigitalSignage/background.png\nshow-trash=0\n" >> /home/pi.config/pcmanfm/LXDE-pi/desktop-items-0.conf
EOF
echo "pcmanfm config already installed"
fi

# Allow executing the setup script
chmod +x /home/pi/setup

# Enable ssh
echo "Enabling ssh..."
systemctl enable ssh

printf "\nWell done, young Commander!\n"
printf "Installation is now complete. Please reboot to begin use, and be patient on reboot as I have to download video files on boot.\n"
printf "I will begin playing the videos in a loop once the download completes.\n"

exit 0;
