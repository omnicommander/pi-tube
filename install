#!/usr/bin/env bash
# =================================
# sudo ./install
# =================================

# Source config to access the variables
source /home/pi/OC-DigitalSignage/config.sh

if [ "$EUID" -ne 0 ]
  then printf "Please run install with sudo!  sudo ./install\n"
  exit
fi

# Go to root directory
cd /

# Self-update
echo
read -p "Can I please run my self-update? (Y/n) " yn
case $yn in
    [Yy]* ) apt update && apt dist-upgrade -y;;
    [Nn]* ) printf "\nHey! I may not run correctly, so you had your chance and you blew it.\n";;
    * ) apt update && apt dist-upgrade -y;;
esac

echo

echo
printf "Installing desktop configuration files...\n"
tar -xvf /home/pi/OC-DigitalSignage/config.tar
echo
printf "Installing Raspian boot configuration files...\n"
tar -xvf /home/pi/OC-DigitalSignage/booter.tar
echo

# ****** NO LONGER REQUIRED TO RUN AS ROOT ************
# printf "\n --- giving VLC access to run as sudo ---\n"
# sed -i 's/geteuid/getppid/' /usr/bin/vlc
# *****************************************************

# Begin user configuration session
#---------------------------------

read -p "Do you wish to set the PI_ID now? (Y/n) " yn
case $yn in
    [Yy]* ) nano /home/pi/OC-DigitalSignage/config.sh;;
    [Nn]* ) printf "You can always edit the config.sh anytime.\n";;
    * ) nano /home/pi/OC-DigitalSignage/config.sh;;
esac

# Turn off screen blanking and hide mouse cursor !!PERMANENT!!
# Needs to be under the [SeatDefault] section to work properly
printf "[Seat:*]\n" >> /etc/lightdm/lightdm.conf
printf "xserver-command=X -nocursor -s 0 -dpms\n" >> /etc/lightdm/lightdm.conf

# Configure cron for boot to run as pi
# Change to pi user for the following EOF
sudo -i -u pi bash << EOF
# export current crontab to mycron
crontab -l > mycron_old

# write new mycron --
# Fetch on boot timestamp to last_cron
echo "@reboot sleep 15;/home/pi/OC-DigitalSignage/fetch >> /home/pi/OC-DigitalSignage/fetch.log && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/OC-DigitalSignage/last_cron" > mycron

# Every 6hrs fetch and timestamp to last_cron
echo "* */6 * * * /usr/bin/python3 /home/pi/OC-DigitalSignage/cronner && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/OC-DigitalSignage/last_cron" >> mycron

# Every 15min push heartbeat and timestamp to last_cron
echo "*/15 * * * * /home/pi/OC-DigitalSignage/push && date +\%Y-\%m-\%d\ \%H:\%M:\%S > /home/pi/OC-DigitalSignage/last_cron" >> mycron

# Every morning at 4am reboot
echo "59 3 * * * sudo /sbin/shutdown -r now" >> mycron

# install new cron file
crontab mycron
rm mycron
EOF

# Install the setup script in the home folder
if [ ! -e "/home/pi/setup" ]; then
cat > /home/pi/setup << EOL
#!/usr/bin/env bash

if [ "$EUID" -ne 0 ]
    then printf "Please run setup with sudo!  sudo ./setup\n"
    exit
fi

echo -n "Enter WiFi name: "
read SSID

echo -n "Enter WiFi password: "
read -s PASS; echo

printf "ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n" > /etc/wpa_supplicant/wpa_supplicant.conf
printf "update_config=1\n" >> /etc/wpa_supplicant/wpa_supplicant.conf
printf "country=\"US\"\n\n" >> /etc/wpa_supplicant/wpa_supplicant.conf
printf "network={\nssid=\"\${SSID}\"\npsk=\"\${PASS}\"\nkey_mgmt=WPA-PSK\n}\n" >> /etc/wpa_supplicant/wpa_supplicant.conf

exit 0;
EOL
fi

cd $PROJECTPATH

# Required to run as pi, will fail miserably otherwise
sudo -i -u pi bash << EOF
# cd to project
cd /home/pi/OC-DigitalSignage

# Create venv and activate it
python3 -m venv venv
source venv/bin/activate

# Install all required modules
python3 -m pip install -r requirements.txt

# Makes the 'videos' directory
# Throws an error if it is not there
mkdir videos

# Create fetch.log
touch fetch.log
EOF

printf "Installation is now complete. Please reboot to begin use.\n"

exit 0